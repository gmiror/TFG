<?xml version="1.0"?>

<launch>
 	
########################## Camera packages ##########################
    	
 <arg name="image_view" default="false" />

 <group ns="camera1">
 
  <node name="front_right" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video/cam_right" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="yuyv" />
    <param name="io_method" value="mmap"/>
    <param name="fps" value="30" />
  </node>
  
 </group>

<group ns="camera2">

  <node name="front_left" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video/cam_left" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="yuyv" />
    <param name="io_method" value="mmap"/>
    <param name="fps" value="30" />
  </node>
  
</group>

########################## Image stiwtching ##########################

<node pkg="ros_realtime_image_stitcher" name="realtime_image_stitching_concatenate" type="realtime_image_stitching_concatenate.py" output="screen"/>

########################## Detect Lanes ##########################

<node pkg="lane_follower" name="lane_detection" type="lane_detection.py" output="screen"/>

########################## LIDAR ##########################

<arg name="topic_name" default="scan"/>
<arg name="frame_id" default="base_laser"/>
<arg name="port_name" default="/dev/USB_LIDAR"/>
<arg name="port_baudrate" default="230400"/>
<arg name="fix_to_base_link" default="true"/>

<!-- ldldiar message publisher node -->
 <node name="LD19" pkg="ldlidar_stl_ros" type="ldlidar_stl_ros_node" output="screen" >
  <param name="product_name" value="LDLiDAR_LD19"/>
  <param name="topic_name" value="$(arg topic_name)"/>
  <param name="frame_id" value="$(arg frame_id)"/>
  <param name="port_name" value ="$(arg port_name)"/>
  <param name="port_baudrate" value ="$(arg port_baudrate)"/>
  <!-- Set laser scan directon: -->
  <!--    1. Set counterclockwise, example: <param name="laser_scan_dir" type="bool" value="true"/> -->
  <!--    2. Set clockwise,        example: <param name="laser_scan_dir" type="bool" value="false"/> -->
  <param name="laser_scan_dir" type="bool" value="true"/>
  <!-- Angle crop setting, Mask data within the set angle range -->
  <!--    1. Enable angle crop fuction: -->
  <!--       1.1. enable angle crop,  example: <param name="enable_angle_crop_func" type="bool" value="true"/> -->
  <!--       1.2. disable angle crop, example: <param name="enable_angle_crop_func" type="bool" value="false"/> -->
  <param name="enable_angle_crop_func" type="bool" value="true"/>
  <!--    2. Angle cropping interval setting, The distance and intensity data within the set angle range will be set to 0 --> 
  <!--       angle >= "angle_crop_min" and angle <= "angle_crop_max", unit is degress -->
  <param name="angle_crop_min" type="double" value="180.0"/>
  <param name="angle_crop_max" type="double" value="359.0"/>
 </node>
<!-- ldlidar message subscriber node -->
 <!-- node name="ListenLD19" pkg="ldlidar_stl_ros" type="ldlidar_stl_ros_listen_node" output="screen">
  <param name="topic_name" value="scan"/>
 </node -->
 <!-- publisher tf transform, parents frame is base_link, child frame is base_laser -->
 <!-- args="x y z yaw pitch roll parents_frame_id child_frame_id period_in_ms"-->
 <node name="base_to_laser" pkg="tf" type="static_transform_publisher"  args="0.0 0.0 0.18 0 0.0 0.0 base_link base_laser 50" if="$(arg fix_to_base_link)"/>

########################## Lane Follower ##########################

<node pkg="ros_realtime_navigation" name="vehicle_navigation" type="vehicle_navigation.py" output="screen"/>

########################## Arduino Comunication ##########################

<node pkg="rosserial_arduino" name="serial_node" type="serial_node.py" output="screen"/>

</launch>
